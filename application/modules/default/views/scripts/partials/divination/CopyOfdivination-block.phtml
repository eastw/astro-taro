<script type="text/javascript">
<!--
var cards = <?=Zend_Json::encode($this->divinationNet);?>;
var currentCard = 0;
var userCards = [];
var cardLimit = <?=$this->divination['cards_in_alignment']?>;
var deck = '';
var onlyOldArkans = 'y';
var decks = <?=Zend_Json::encode($this->decks); ?>;
var back = '';
var divinationType = '<?=$this->divination['type']?>';
var divinationId = '<?=$this->divination['id']?>';
var classicHaveReverseCards = [4,6,8,13,15,17,22,24,26,31,33,35];

$(document).ready(function(){
	$('#decks-choice').change(function(){
		if($(this).val() != ''){
			var cards = [1,10,20];
			for(var i = 0; i< 3;i++){
				$('#card-example-' + (i+1)).html('<img style="width:50%" src="/files/decks/'+$(this).val()+'/'+cards[i]+'.png">');
			}
		}else{
			for(var i = 1; i< 4;i++){
				$('#card-example-' + i).html('');
			}
		}
	});
	if(divinationType == 'classic'){
		$('#classic-significator').change(function(){
			if($(this).val() != ''){
				//if(userCards[0] != undefuned){
					userCards[0] = parseInt($(this).val());
				//}
			}
		});
	}
	$('#start-divination').click(function(){
		if(divinationType == 'classic'){
			userCards[0] = parseInt($('#classic-significator').val());
		}
		if($('#decks-choice option:selected').val() != ''){
			//$.loading(true, {img: '/files/images/progress.gif', align:'center'});
			deck = $('#decks-choice option:selected').val();
			onlyOldArkans = $('#only-old-arkans option:selected').val();
			for(var i in decks){
				if(decks[i].folder_alias == $('#decks-choice option:selected').val()){
					back = decks[i].back;
					break;
				}
			}
			initPart2();
			//var html = '<div style=""><img src="/files/images/proba.gif"/></div>';
			//$('#part2').html(html);
			$('#part1').hide();
			$('#part2').show();
		}else{
			alert('РќРµРѕР±С…РѕРґРёРјРѕ РІС‹Р±СЂР°С‚СЊ РєРѕР»РѕРґСѓ РґР»СЏ РіР°РґР°РЅРёСЏ');
		}
	});
	$('#auto-divination').click(function(){
		generateCard();
	});
});
function initPart2(){
	var alignAreaWidth = $('#part2').width();
	alignAreaWidth = ((alignAreaWidth - alignAreaWidth % 3) / 3)*2;
	var cardWidth = (alignAreaWidth - alignAreaWidth % 9) / 9;
	var alignAreaHeight = $('#part2').height();
	var cardHeight =  (alignAreaHeight - alignAreaHeight % 5) / 5;

	var html = '';//$('#part2').html();
	var top = 0;
	var left = 0;
	for(var i in cards){
		top = cardHeight * parseInt(cards[i].net_row);
		left = cardWidth * parseInt(cards[i].net_column);
		html += '<div class="back-card-item" style="top:'+top+'px;left:'+left+'px;width:50px;height:90px;">';//<img /></div>';
		if(cards[i].is_significator == 'n'){
			html += '<img id="align_'+cards[i].alignment_position+'" style="width:50px" src="/files/images/card_'+cards[i].alignment_position+'.jpg"/>';
		}else{
			html += '<img id="align_'+cards[i].alignment_position+'" style="width:50px" src="/files/images/card_'+cards[i].significator_type+'.jpg"/>';
		}
		html += '</div>';
	}
	
	var cardsCount = 0;
	var cardTop = 0;
	if(divinationType == 'taro'){
		if(onlyOldArkans == 'y'){
			cardsCount = 11;
		}else{
			cardsCount = 26;
		}
		cardTop = 20;
		for(var i = 0; i < cardsCount; i++){
			if(onlyOldArkans == 'y'){
				html += '<div class="card-item" style="top:'+cardTop+'px;right: 130px;width:50px;height:90px">'
								+'<img style="width:50px" src="/files/decks/'+deck+'/'+back+'"/>'
						+'</div>';
				html += '<div class="card-item" style="top:'+cardTop+'px;right: 70px;width:50px;height:90px">'
							+'<img style="width:50px" src="/files/decks/'+deck+'/'+back+'"/>'
						+'</div>';
			}else{
				html += '<div class="card-item" style="top:'+cardTop+'px;right: 130px;width:50px;height:90px">'
							+'<img style="width:50px" src="/files/decks/'+deck+'/'+back+'"/>'
						+'</div>';
				html += '<div class="card-item" style="top:'+cardTop+'px;right: 70px;width:50px;height:90px">'
							+'<img style="width:50px" src="/files/decks/'+deck+'/'+back+'"/>'
						+'</div>';
				html += '<div class="card-item" style="top:'+cardTop+'px;right: 10px;width:50px;height:90px">'
							+'<img style="width:50px" src="/files/decks/'+deck+'/'+back+'"/>'
						+'</div>';
			}
			cardTop += 10;
		}
	}
	if(divinationType == 'classic'){
		cardsCount = 18;
		cardTop = 20;
		for(var i = 0; i < cardsCount; i++){
			html += '<div class="card-item" style="top:'+cardTop+'px;right: 130px;width:50px;height:90px">'
							+'<img style="width:50px" src="/files/decks/'+deck+'/'+back+'"/>'
					+'</div>';
			html += '<div class="card-item" style="top:'+cardTop+'px;right: 70px;width:50px;height:90px">'
						+'<img style="width:50px" src="/files/decks/'+deck+'/'+back+'"/>'
					+'</div>';
			cardTop += 10;
		}
	}
	if(divinationType == 'rune'){
		cardsCount = 6;
		cardTop = 20;
		for(var i = 0; i < cardsCount; i++){
			html += '<div class="card-item" style="top:'+cardTop+'px;right: 190px;width:50px;height:90px">'
							+'<img style="width:50px" src="/files/decks/'+deck+'/'+back+'"/>'
					+'</div>';
			html += '<div class="card-item" style="top:'+cardTop+'px;right: 130px;width:50px;height:90px">'
						+'<img style="width:50px" src="/files/decks/'+deck+'/'+back+'"/>'
					+'</div>';
			html += '<div class="card-item" style="top:'+cardTop+'px;right: 70px;width:50px;height:90px">'
						+'<img style="width:50px" src="/files/decks/'+deck+'/'+back+'"/>'
					+'</div>';
			html += '<div class="card-item" style="top:'+cardTop+'px;right: 10px;width:50px;height:90px">'
					+'<img style="width:50px" src="/files/decks/'+deck+'/'+back+'"/>'
				+'</div>';
			cardTop += 80;
		}
	}
	
	$('#part2').find('b').after(html);

	$('.card-item').mouseover(function(){
		var top = $(this).position().top - 5;
		$(this).css('top',top+'px');
	}).mouseout(function(){
		var top = $(this).position().top+5;
		$(this).css('top',top + 'px');
	});
	$('.card-item').click(function(){
		//console.log(userCards);
		if(cards.length > currentCard){
			$(this).unbind('click').unbind('mouseover').unbind('mouseout');
			var item = null;
			for(var i in cards){
				if(cards[i].alignment_position == (currentCard + 1)){
					item = cards[i];
					break;
				}
			}
			var left_animate = cardWidth * parseInt(item.net_column);
			var top_animate = cardHeight * parseInt(item.net_row);
			currentCard++;
			var card = generateCard();
			var cardName = '';
			if(card.side == 'normal'){
				cardName = card.cardNumber+'.png';
			}else{
				cardName = card.cardNumber+'_0.png';
			}
			getCardDescription(divinationId,currentCard,card,deck);
			$(this).animate({left:left_animate,top:top_animate},function(){
				$('#align_' + item.alignment_position).parent().remove();
				$(this).css('top',top_animate);
				
				$(this).find('img').attr('src','/files/decks/'+deck+'/' + cardName);
				$(this).mouseover(function(){
					$(this).find('img').css('width','70px');
					var pos = $(this).position();
					$(this).css('top',(pos.top-10)+'px');
					$(this).css('left',(pos.left-10)+'px');
				}).mouseout(function(){
					var pos = $(this).position();
					$(this).find('img').css('width','50px');
					$(this).css('top',(pos.top+10)+'px');
					$(this).css('left',(pos.left+10)+'px');
				});
			});
		}else{
			console.log('divination end');
		}
	});
}

function getCardDescription(divId,curCard,generatedCard,curDeck){
	$.post(
			'/divination/get-card-description',
			{
				'divination_id': divId,
				'card_order': curCard-1,
				'card_number': generatedCard.cardNumber,
				'side': generatedCard.side,
				'deck': curDeck
			},
			function(data){
				$('#our-alignment').show();
				$('#desc_wrapper_' + (curCard-1)).html(data);
			}
		);
}

function generateCard(){
	var cardNumber = -1;
	var found = false;
	var notFound = false;
	var card = {cardNumber:-1,side: -1};
	while(!notFound){
		if(divinationType == 'taro'){
			if(onlyOldArkans == 'n'){
				cardNumber = Math.floor(Math.random()*78);
			}else{
				cardNumber = Math.floor(Math.random()*22);
			}
		}
		if(divinationType == 'classic'){
			cardNumber = Math.floor(Math.random()*36);
		}
		if(divinationType == 'rune'){
			cardNumber = Math.floor(Math.random()*24);
		}
		/*
		if(currentCard == 1){
			cardNumber = 0;
		}
		*/
		found = false;
		for(var i in userCards){
			if(userCards[i] == cardNumber){
				//console.log('found');
				found = true;
				break;
			}
		}
		if(found){
			notFound = false;
		}else{
			notFound = true;
			var userCardsLen = userCards.length-1;   
			userCards[/*currentCard*/userCardsLen+1] = cardNumber;
			card.cardNumber = cardNumber;
			card.side = Math.floor(Math.random()*30);
		
			//console.log('side is ' + card.side);
			//card.side = 8;//test code	
			if(card.side > 15){
				card.side = 'normal';
			}else{
				if(divinationType == 'classic'){
					var haveReverse = false;
					for(var i = 0; i < classicHaveReverseCards.length; i++){
						//console.log('!!');
						if(card.cardNumber == classicHaveReverseCards[i]){
							//console.log('reverse');
							haveReverse = true;
							break;
						}
					}
					if(haveReverse){
						card.side = 'reverse';
					}else{
						card.side = 'normal';
					}
				}
				if(divinationType == 'taro' || divinationType == 'rune'){
					card.side = 'reverse';
				}
			}
		}
		//console.log(userCards);
	}
	return card;
} 
//-->
</script>
<div id="part1" style="width:970px;height:200px;border: 1px solid grey;">
	<div style="width:30%;height:198px;border: 1px solid grey;float:left;">
		<h2>Р¤РѕСЂРјР° СЂР°СЃРєР»Р°РґР°</h2>
		<img src="" />
	</div>
	<div style="width:39%;height:198px;border: 1px solid grey;float:left;">
		<h2>Р’С‹Р±СЂР°РЅРЅР°СЏ РєРѕР»РѕРґР°</h2>
		<select id="decks-choice" >
			<option value="">Р’С‹Р±РµСЂРёС‚Рµ РєРѕР»РѕРґСѓ</option>
			<?php if(count($this->decks)):?>
				<?php foreach($this->decks as $deck):?>
				<option value="<?=$deck['folder_alias']?>" ><?=$deck['name']?></option>
				<?php endforeach;?>
			<?php endif;?>
		</select>
		<div>
			<div id="card-example-1" style="float:left;width:83px">
			</div>
			<div id="card-example-2" style="float:left;width:83px">
			</div>
			<div id="card-example-3" style="float:left;width:83px">
			</div>
		</div>
	</div>
	<div style="width:30%;height:198px;border: 1px solid grey;float:left;">
		<h2>Р“Р°РґР°РЅРёРµ</h2>
			<?php if($this->divination['type'] == 'taro'):?>
			<select id="only-old-arkans">
				<?php if($this->divination['only_old_arkans'] == 'n'):?>
					<option value="n">РќР° РїРѕР»РЅРѕР№ РєРѕР»РѕРґРµ</option>
				<?php endif;?>
				<option value="y">РўРѕР»СЊРєРѕ СЃС‚Р°СЂС€РёРµ Р°СЂРєР°РЅС‹</option>
			</select>
			<?php elseif($this->divination['type'] == 'classic'):?>
				<b>РљР°СЂС‚Р° СЃРёРіРЅРёС„РёРєР°С‚РѕСЂ</b>
				<select id="classic-significator">
					<option value="0">РљРѕСЂРѕР»СЊ РўСЂРµС„</option>
					<option value="9">РљРѕСЂРѕР»СЊ Р§РµСЂРІРµР№</option>
					<option value="18">РљРѕСЂРѕР»СЊ РџРёРє</option>
					<option value="27">РљРѕСЂРѕР»СЊ Р‘СѓР±РµРЅ</option>
					<option value="1">Р”Р°РјР° РўСЂРµС„</option>
					<option value="10">Р”Р°РјР° Р§РµСЂРІРµР№</option>
					<option value="19">Р”Р°РјР° РџРёРє</option>
					<option value="28">Р”Р°РјР° Р‘СѓР±РµРЅ</option>
				</select>
			<?php endif;?>
		<p>РЎРѕСЃСЂРµРґРѕС‚РѕС‡СЊС‚РµСЃСЊ РЅР° РІРѕРїСЂРѕСЃРµ Рё РЅР°Р¶РјРёС‚Рµ "РўР°СЃРѕРІР°С‚СЊ РєРѕР»РѕРґСѓ"</p>
		<input type="button" id="start-divination" value="РўР°СЃРѕРІР°С‚СЊ РєРѕР»РѕРґСѓ"/>
	</div>
</div>
<div id="part2" style="width:970px;height:600px;border: 1px solid grey;position:relative;display:none;">
	<b style="right: 230px;position:absolute;">Р’С‹Р±РµСЂРёС‚Рµ РєР°СЂС‚С‹</b>
	<input type="button" value="РђРІС‚РѕРјР°С‚РёС‡РµСЃРєРё" id="auto-divination" style="position:absolute;top:<?=(100+170)?>px;right: 230px;"/>
</div>
